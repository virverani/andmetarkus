-- Kuupäevadega seotud funktsioonid PostgreSQL-is

-- 1.1. Leia müügikogused kuude lõikes -- TO_CHAR funktsionaalsus
select TO_CHAR(sale_date, 'YYYY-MM') as yearmonth, sum(quantity)
from salestable as s
group by TO_CHAR(sale_date, 'YYYY-MM')
order by TO_CHAR(sale_date, 'YYYY-MM') asc;

select date_trunc('month', sale_date) as yearmonth, sum(quantity)
from salestable as s
group by date_trunc('month', sale_date)
order by date_trunc('month', sale_date) asc;

--  1.2. HARJUTAMISEKS: Leia müügikogused aastate lõikes
select TO_CHAR(sale_date, 'YYYY') as year, sum(quantity)
from salestable as s
group by TO_CHAR(sale_date, 'YYYY')
order by TO_CHAR(sale_date, 'YYYY') asc;



-- 1.3. Kui palju on viimasest müügist möödas?
-- 1.3.1. I võimalus: age funktsioon, annab tekstilise tulemuse
select age(max(sale_date)), age(max(sale_date)), max(sale_date)
from salestable;

-- Sama tulemus tundides
select age(max(sale_date)) as age, 
EXTRACT(EPOCH FROM age(max(sale_date))) / 3600 as age_in_hours
from salestable;

-- 1.3.2. II võimalus: current_date ja lahutustehe - annab päevade arvu numbrilise väärtusena
select current_date, max(sale_date), current_date - max(sale_date) as age_in_days
from salestable;

-- 1.4. HARJUTAMISEKS: Kui palju aega on esimesest müügist möödas?
select age(min(sale_date)), min(sale_date),  current_date - min(sale_date) as age_in_days
from salestable;


-- 1.5. Kui palju on tegelikud müügid, eelarve ja nende võrdlus kuude kaupa?
-- Loome eelarvetabeli kuude kaupa
with b as (select TO_CHAR(budget_date, 'YYYY-MM') as yearmonth,
sum(budget_sum) as budget_sum
from budget_monthly_salesrep
group by TO_CHAR(budget_date, 'YYYY-MM')),
-- Loome müügitabeli kuude kaupa
s as (select TO_CHAR(sale_date, 'YYYY-MM') as yearmonth, 
sum(quantity*unit_price*(1-discount)) as sales_sum
from salestable
group by TO_CHAR(sale_date, 'YYYY-MM'))
-- Ühendame loodud tabelid
select b.yearmonth, b.budget_sum, s.sales_sum, 
s.sales_sum - b.budget_sum as diff_from_budget
from b 
left join s on b.yearmonth = s.yearmonth
order by b.yearmonth asc;

-- Lisame tulba sales_sum jaoks
ALTER TABLE salestable -- millist tabelit muudame?
ADD sales_sum numeric -- add = lisame, uue tulba nimi ja formaat
generated always as -- alati arvutab välja teiste tulpade põhjal
(quantity*unit_price*(1-discount)) stored; --tabelisse salvestatud

INSERT INTO sales.salestable
(sale_id, sale_date, customer_id, product_id, quantity, unit_price, discount, sales_rep_id, region_id)
VALUES('S2', '2025-01-01', '', '', 5, 10, 0, '', '');

select * from salestable
where sale_id = 'S2';


-- 1.6. HARJUTAMISEKS: 
-- Kui palju on tegelikud müügid, eelarve ja 
-- nende võrdlus kuude ja müügiesindaja kaupa?
-- Eeldame, et eelarvetabelis on olemas kõik kuud 
-- ja kõik müügiesindajad
with b as (select to_char(budget_date, 'YYYY-MM') as yearmonth,
       sales_rep_id,
       sum(budget_sum) as budget
    from budget_monthly_salesrep
    group by to_char(budget_date, 'YYYY-MM'),
       sales_rep_id
), 
s as (select to_char(sale_date, 'YYYY-MM') as yearmonth,
       sales_rep_id,
       sum(sales_sum) as sales_sum
    from salestable
    group by to_char(sale_date, 'YYYY-MM'),
       sales_rep_id
)
select b.yearmonth,
   b.sales_rep_id,
   b.budget,
   s.sales_sum as sales_sum,
   s.sales_sum - b.budget as difference
from b
left join s on b.yearmonth = s.yearmonth
   and b.sales_rep_id = s.sales_rep_id  
order by b.yearmonth;

